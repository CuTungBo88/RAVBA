$ git clone https://github.com/RetroAchievements/RAVBA.git
$ cd RAVBA
$ git submodule init
$ git submodule update --recursive

From a VS2017 x86 native tools command prompt
$ mkdir vsbuild
$ cd vsbuild
$ cmake .. -DVCPKG_TARGET_TRIPLET=x86-windows -DENABLE_RETROACHIEVEMENTS=ON -DCMAKE_BUILD_TYPE=Debug

This prepares a VS solution (VBA-M.sln) in the vsbuild directory that can be opened in Visual Studio.
Note that because this solution was generated by cmake, the only valid build configuration is Debug.

$ mkdir publish
$ cd publish
$ cmake ../.. -DVCPKG_TARGET_TRIPLET=x86-windows -DVBAM_STATIC=ON -DENABLE_RETROACHIEVEMENTS=ON

This prepares a second VS solution in the vsbuild/publish directory for the Release build. It's unlikely that
you'll ever need to open that in Visual Studio. Instead, you can build from the VS2017 x86 command prompt as follows:

$ msbuild /m ALL_BUILD.vcxproj -p:Configuration=Release


