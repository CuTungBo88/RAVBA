==== Setup repository ====

$ git clone https://github.com/RetroAchievements/RAVBA.git
$ cd RAVBA
$ git submodule init
$ git submodule update --recursive

==== Create debug vcxproj ====

From a VS2019 x64 native tools command prompt
$ mkdir vsbuild
$ cd vsbuild
$ cmake .. -DVCPKG_TARGET_TRIPLET=x64-windows -DENABLE_RETROACHIEVEMENTS=ON -DCMAKE_BUILD_TYPE=Debug -DCMAKE_SYSTEM_VERSION=8.1 -T v141

This prepares a VS solution (VBA-M.sln) in the vsbuild directory that can be opened in Visual Studio.
Note that because this solution was generated by cmake, the only valid build configuration is Debug.

You can also build it from the VS2019 x64 command prompt as follows:
$ msbuild /m ALL_BUILD.vcxproj -p:Configuration=Debug

==== Create release ====

Unfortunately, the vcpkg build creates a bunch of dependencies on libraries on whatever machine the build was performed on. In particular, when building on Windows 10, the resulting binary can only be run on Windows 10.

To work around this, we cross compile from linux. Using an Ubuntu VM, checkout the code, then run the following commands:

~/source/RAVBA$ export BUILD_ENV=mingw-w32
~/source/RAVBA$ ./installdeps MinGW-w64-i686
~/source/RAVBA$ git submodule update
~/source/RAVBA$ mkdir build && cd build
~/source/RAVBA/build$ /usr/lib/mxe/usr/bin/i686-w64-mingw32.static-cmake .. -DENABLE_SDL=ON -DENABLE_OPENAL=ON -DENABLE_RETROACHIEVEMENTS=ON -DCMAKE_SYSTEM_VERSION=7.0 -DENABLE_LTO=OFF -DENABLE_NLS=OFF -DENABLE_FFMPEG=OFF -DENABLE_ONLINEUPDATES=OFF
~/source/RAVBA$ make -j2

NOTE: the linux build process will not generate the RA_BuildVer.h file, so copy it from the Windows machine and manually update it to the correct version.

The one benefit of doing this is we end up with a single binary, whereas there's 7 or 8 additional DLLs generated in the Windows project.

For x64 build:

~/source/RAVBA$ export BUILD_ENV=mingw-w64
~/source/RAVBA$ ./installdeps MinGW-w64-x86_64
~/source/RAVBA$ git submodule update
~/source/RAVBA$ mkdir build64 && cd build64
~/source/RAVBA/build64$ /usr/lib/mxe/usr/bin/x86_64-w64-mingw32.static-cmake .. -DENABLE_SDL=ON -DENABLE_OPENAL=ON -DENABLE_RETROACHIEVEMENTS=ON -DCMAKE_SYSTEM_VERSION=7.0 -DENABLE_LTO=OFF -DENABLE_NLS=OFF -DENABLE_FFMPEG=OFF -DENABLE_ONLINEUPDATES=OFF
~/source/RAVBA$ make -j2
